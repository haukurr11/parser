FIRST(identifier_list) = {id}
FIRST(identifier_list´){, ,ε}

FIRST(declarations) = {var, ε}

FIRST(type) = FIRST(standard_type) + {array} = {integer,real,array}

FIRST(standard_type) = {integer,real}

FIRST(subprogram_declarations) =
           FIRST(subprogram_declaration)
          + {ε}
          = FIRST(subprogram_head) = {function, procedure}

FIRST(subprogram_declaration) = FIRST(subprogram_head) = {function, procedure}

FIRST(parameter_list) = FIRST(identifier_list) = {, , ε}

FIRST(subprogram_head) = {function, procedure}

FIRST(arguments) = { ( }

FIRST(compound_statement) = {begin}

FIRST(optional_statements) = FIRST(statement_list) + {ε}
                           = {begin, id, if, while, ε}

FIRST(statement_list) = FIRST(statement) = {begin, id, if, while}

FIRST(statement) = FIRST(compound_statement) + {id, if, while} = {begin, id, if, while}

FIRST(statement´) = {assignop, [, (, ε}

FIRST(variable) = {id}
FIRST(variable´) = {[, ε}

FIRST(procedure_statement) = id

FIRST(expression_list) = FIRST(expression) = {id,num,(,not,+,-}

FIRST(expression) = FIRST(simple_expression) = {id,num,(,not,+,-}

FIRST(simple_expression) = FIRST(term) + FIRST(sign)
                         = {id,num,(,not} + {+,-}
                         = {id,num,(,not,+,-}

FIRST(term) = FIRST(factor) = {id,num,(,not}

FIRST(factor) = {id,num,(,not}

FIRST(sign) = {+,-}


FOLLOW(identifier_list) = {:}
FOLLOW(identifier_listPrime){ε}
FOLLOW(declarations) = {ε}
FOLLOW(type) = FIRST(parameter_listPrime) + {;} =
FOLLOW(standard_type) = FOLLOW(type) = FIRST(parameter_listPrime + {;}
FOLLOW(subprogram_declarations) = {ε}
FOLLOW(subprogram_declaration) = {;}
FOLLOW(subprogram_head) = FIRST(compound_statement) + FIRST(declarations) = {var, begin, ε}
FOLLOW(compound_statement) = {ε}
FOLLOW(OptionalStatements) = {end}
FOLLOW(StatementList) = FOLLOW(OptionalStatements) = {end}
FOLLOW(Statement) = FIRST(StatementListPrime) + FOLLOW(StatementList) = {;}+{end} = {;,end}

